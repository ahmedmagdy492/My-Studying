The Role of Malware Analysis in:

Threat Intellegence:
IOC: Indicators of Comprimise, which is used by cyber security professionals to identify and match threats.

IOA: Indicators of Attack, are also commonly used
to describe anomalous behavior very likely associated with malicious activity

Incident Response:
after an attack, the malware analysis process starts:
1.it generally involves finding all the IoCs involved which can help discover other infected machines or compromised assets and find any other related malicious samples
2.malware analysis helps in understanding the capabilities of the payload.

some tools may help identify the traffic that is suspcious such as Network Detection Responses (NDRs), can record suspicious network traffic for later investigation.

Threat Hunting:
In contrast to incident response, threat hunting involves an active search for IOAs. It can be more proactive, taking place before the security alert has been triggered, or reactive, addressing an existing concern.

Malware analysis knowledge helps cybersecurity engineers to be more professional threat hunters who understand the attackers’ techniques and tactics on a deeper level and who are fully aware of the context.
In particular, it helps understand how exactly the attacks may be implemented.

Creating Detections:
Multiple companies across the world develop and distribute cybersecurity systems to protect their
customers against all types of threats. There are multiple approaches to detecting malicious activity
at different stages of the attack, for example, monitoring network traffic, exploring system logs and
registry entries, or checking files both statically and during the execution. In many cases, it involves
some sort of rules or signatures to be developed to distinguish malicious patterns from benign ones.


Malware categories:
1.Trojan: 
The most universal malware category, simply defined by its performing of malicious
activities in the unaware user’s environment, named for the legendary Trojan Horse used to
conquer the city of Troy:
- Downloader: The main goal here is to download and somehow execute the external payload
(either explicitly or by adding it to autorun).
- Dropper: Here, additional payloads are not downloaded but extracted from the Trojan’s body.
- Backdoor, as known as Remote Access Trojan (RAT): In this case, the malware may receive
remote commands to perform a range of actions.
- Ransomware: Here, attackers prevent users from performing their daily activities and demand a ransom to restore them. This can be done by various means, usually by either locking the whole system or locking access to particular files within it. Another common scenario when targeting individuals is accusing them of some criminal deed and demanding a “fine” to be paid, threatening escalation or public announcement in the case of non-compliance.
- Infostealer, aka Password Stealer (PWS): The main goal here is to steal sensitive information,
such as saved credentials of any kind (from other machines, financial organizations, social
networks, email and instant messenger accounts, videogames, and so on).
- Spyware: While spyware’s purpose is quite similar to infostealer’s, this category is broader
and may also include video and audio recording capabilities or tracking the victim’s location
with GPS.
- Banker: This category may commonly fall into the infostealer one but has a narrower purpose
and bigger scope of potential functionality. Here, malware may be strongly focused on gaining
access to money, so it can also support intercepting one-time tokens sent by the bank as part
of two-factor authentication (2FA), modifying financial information to redirect payments,
or injecting scripts to intercept entered banking credentials.
- DoS: The main goal here is Denial of Service (DoS), making the target system or service
unusable; it is commonly used for sabotage, hacktivism, or vandalism purposes.
- Wiper: Here, malware is used to delete information that is either sensitive or critical to the
system’s operation, making it another tool for a DoS attack.
- DDoS: In this case, a Distributed Denial of Service (DDoS) attack is launched, where
multiple bots attack the victim via the network.
- Spammer, aka spambo: This threat can send spam on behalf of the victim.
- Clicker: Here, attackers may simulate real user clicks to get money from advertisements,
search engine poisoning, or promoting fake accounts.
- Miner: In this case, the unwitting victim’s machine is used to mine cryptocurrencies, spending
the machine’s precious resources.
- Packed: Not referring to the actual purpose of the associated threat, this detection name
generally means that the corresponding sample is protected with some malicious packer.
- Injector: Not referring to the actual purpose of the threat, it means that the corresponding
sample uses process injection for some reason (see the dedicated Chapter 5, Inspecting Process
Injection and API Hooking, for more information about potential use cases).


• Worm: This category of threat is defined by the ability to self-propagate between different
machines. There are multiple variants of worms depending on the protocol (for example, IRC)
or media (instant messenger, email, and so on) they utilize to propagate.
• Virus: Unlike worms propagating between machines, the main goal of a file infector is to
propagate within the current system by infecting other executables and documents. In this
case, when the victim opens/launches a legitimate file, control is also given to the malicious
code. There are several variants of how it can be used, from actually writing malicious code
and data into executables and adding macro templates to documents to simply replacing victim
files with their own body and storing a copy of an original file elsewhere to execute it later.

• Rootkit: Nowadays, this name doesn’t have a single definition. Originally used to define tools
elevating privileges (giving root access), it is most commonly used now to define threats that
are either used to hide other ones or simply operate in the kernel mode. More information can
be found in Chapter 7, Understanding Kernel-Mode Rootkits.

• Bootkit: Such threats insert themselves into the booting process (for example, by modifying
the boot sector or boot loader) to gain access before the operating system.
• Exploit: Here, malware abuses a vulnerability in the victim software to achieve its goal (elevate
privileges, access sensitive information, perform arbitrary code execution (ACE), and so on).
See Chapter 8, Handling Exploits and Shellcode, to get more information about exploits.
• FakeAV: This category of threats shows users various warnings about allegedly critical problems
with their systems and aggressively demands that the “full version” of itself is bought to remediate it.
• Hoax: Usually created as a joke or an act of hooliganism, this category of threats aims at simply
scaring the user about some “critical” but actually non-existent problem.
• PUAs: Standing for Potentially Unwanted Applications, these threats generally involve less
devastating but still annoying activity, such as silently installing legitimate but unrequested
applications.
• Adware: Here, the threat displays non-requested advertisements to victims, in many cases
aggressively and without an easy way to remove them.
• Hacktool: This is a big category involving multiple tools that can be used by both attackers and
cybersecurity professionals, for example, for red teaming purposes.
• Dual-use tools: In this case, the corresponding tools can be used by both attackers and legitimate
users, such as system administrators. Examples include the psexec tool by Sysinternals, which
can be used to execute commands on remote machines, and various remote administration tools

The MITRE ATT&CK framework:
• Tactic: Represents a high-level goal of the attacker, a reason why the corresponding action is performed.

• Technique: The practical way in which the defined high-level goal is achieved.

• Sub-technique: A more detailed and granular description of how exactly a certain action is conducted.

• Procedure: An actual implementation of the technique/sub-technique.

• TTPs: Stands for tactics, techniques, and procedures: a summary of the methods used by
attackers with an explanation of what is achieved by utilizing them.

• Group: Represents a set of related adversarial activities likely to be performed by a single entity known under this name.

• Mitigation: Technology and concepts that are used to circumvent or prevent an attack.

• Software: Code that can be used to conduct adversary actions, combining both publicly
available tools and malware.

• Matrix: A combination of TTPs related to a particular industry sector.


APT attack:
APT stands for Advanced Persistent Threat. Generally, malware receives such a title if the actors tailored it to target a particular entity, whether it was an organization or a particular individual. This means that the attackers chose a specific victim and won’t simply give up and go away if one approach doesn’t work.


Zero-day attack:
ero-day attacks involve the use of zero-day exploits, which target vulnerabilities that were not previously known, thus defining a “day zero” upon which it happened.

Fileless malware:
So-called fileless malware has emerged to prevent malicious activity and to bypass traditional antivirus products strongly focused on detecting malicious samples in the form of files. The idea here is that malicious code has no independent sample to detect and delete. Instead, the shell and inline script commands are used. An example of such a threat is Poweliks, which stores a malicious command in the registry key that provides autorun capabilities.

Living off the land:
is when the hacker live on the environment of the victim and simply use their tools and apps there are some tools that we can use accompolish this:
1.https://gtfobins.github.io/
2.https://lolbas-project.github.io/#

We can use a package called ClamAV to scan our uploaded file in c#

Fileless, LPE Backdoor for maintaining access:
with elavted cmd run the following command:
sc.exe sdset scmanager D:(A;;KA;;;WD)

Bypassing Applications Allowlist in windows:
-there is a native tool on windows called SystemResetPlatform.exe that uses a dll located C:\$SysReset\Framework\Stack\RjvPlatform.dll we can actually replace that with our own dll and when you run SystemResetPlatform.exe boom our code will run. $SysReset folder is created when you do a system reset or a system refresh

Privilage Escaliation in Linux:
if you have got initial access on a machine and you need to escalate your privialge if there is a miss configuration and you have access to this directory /usr/lib/x86_64-linux-gnu/security you can actually replace a pam deny module with a pam allow module and let the system give you access to any thing.

ROB (return oriented programming):
-is a techinque that hackers were using in the past and it's almost becoming a dead technique thanks to the vPro platform from intel.
-rob is a technique in which it inject some instructions before a return instruction in which it can jump around to do something that was not intended by the developer of that program.
-it's used when some security features are in place such as DEP(Data Execution Prevention) or NS(non-executable stack)

Decrypting TLS Traffic:
if you are using chrome you can simply go ahead and set a new environment variable with the name "SSLKEYLOGFILE" and create a file whereever you want then start capturing traiffic from wireshark and head over to your faviroute site and goto edit -> preferences -> protcols -> tls and upload a log file